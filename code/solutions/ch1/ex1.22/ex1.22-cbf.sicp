; exercise 1.22, page 54

(define (inc n) (+ n 1))

(define (prime? n)
  (define (smallest-divisor n)
    (find-divisor n 2))
  (define (find-divisor n test-divisor)
    (cond ((> (square test-divisor) n) n)
          ((divides? test-divisor n) test-divisor)
          (else (find-divisor n (+ test-divisor 1)))))
  (define (divides? a b)
    (= (remainder b a) 0)
  (= n (smallest-divisor n))))



(define (timed-prime-test n)
  (newline)
  (display n)
  (start-prime-test n (runtime)))

(define (start-prime-test n start-time)
  (if (prime? n)
      (report-prime (- (runtime) start-time))))

(define (report-prime elapsed-time)
  (display " *** ")
  (display (seconds elapsed-time)))

(define (search-for-primes even-start count)
  (newline)
  (display "First three primes above ")
  (display even-start)
  (display ":")
  (define (iter candidate count)
    (cond ((> count 0)
           (cond ((prime? candidate)
                  (timed-prime-test candidate)
                  (iter (+ candidate 2) (- count 1)))
                 (else
                  (iter (+ candidate 2) count))))))
  (iter (inc even-start) count)
  (newline))

(search-for-primes 1000 3)
(search-for-primes 10000 3)
(search-for-primes 100000 3)
(search-for-primes 1000000 3)

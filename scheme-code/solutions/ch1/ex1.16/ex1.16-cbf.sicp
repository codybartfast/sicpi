; exercise 1.16, page 46

(define (exp-iter b n)
  (define (iter b n a)
    (cond ((= n 0) a)
          ((even? n)  (iter (square b) (/ n 2)  a))
          (else (iter b (- n 1) (* a b)))))
  (iter b n 1))

(define fast-expti exp-iter)

(fast-expti 2 0)
(fast-expti 2 1)
(fast-expti 2 4)
(fast-expti 2 16)
(fast-expti 2 32)
(fast-expti 17 7)
